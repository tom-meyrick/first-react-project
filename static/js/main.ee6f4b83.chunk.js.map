{"version":3,"sources":["Header.js","Paragraph.js","Square.js","People.js","BasketItem.js","Basket.js","Stuff.js","AppifyHeader.js","AppifyAside.js","AppifyNumbers.js","AppifyPagination.js","AppifyMain.js","Appify.js","Clicked.js","ToggleText.js","Counter.js","StepCounter.js","CatchMeIfYouCan.js","RollCall.js","GodCounter.js","TwoCounters.js","Length.js","PasswordStrength.js","TempConverter.js","List.js","Adder.js","Transform.js","Footer.js","FourOhFour.js","pre-made/Progress.js","pre-made/CatchMeIfYouCan2.js","pre-made/Dates.js","App.js","serviceWorker.js","index.js"],"names":["Header","children","this","props","className","Component","Paragraph","Square","state","isGreen","handleClick","bind","setState","changedColor","color","onClick","style","background","width","height","defaultProps","People","names","console","log","map","name","i","key","BasketItem","items","item","index","price","toFixed","Basket","class","scope","Stuff","square","AppifyHeader","AppifyAside","src","numbers","AppifyNumbers","number","AppifyPagination","page","href","AppifyMain","Appify","Clicked","clicked","ToggleText","initial","switchMessage","alternate","Counter","counter","plus","minus","max","StepCounter","step","CatchMeIfYouCan","position","jump","placement","marginTop","RollCall","currentIndex","length","GodCounter","count","window","addEventListener","removeEventListener","TwoCounters","value1","value2","handle1","handle2","document","title","Length","input","handleChange","e","currentTarget","value","onChange","PasswordStrength","handleColor","Form","Group","controlId","Label","Control","type","Button","variant","Badge","fahrenheit","celsius","handleF","handleC","for","List","todo","list","preventDefault","ListGroup","as","Item","placeholder","Adder","reduce","acc","num","Transform","transform","Footer","to","FourOhFour","Progress","progress","ProgressBar","now","label","disabled","Dates","handleChangeOne","date","firstDate","handleChangeTwo","secondDate","Date","moment","diff","daysBetween","days","calculateDays","selected","Alert","React","x","sum","App","CatchMeIfYouCan2","exact","path","TempConverter","render","match","params","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gOAaeA,E,uKAVH,IACAC,EAAaC,KAAKC,MAAlBF,SACR,OACE,4BAAQG,UAAU,aAChB,qCAAWH,Q,GALEI,aCMNC,EANG,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAH,OAChB,6BAASG,UAAU,YACjB,2BAAIH,GAAsB,iB,OCAxBM,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEC,SAAS,GACxB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,0DAOjBT,KAAKU,SAAS,CAAEH,SAAUP,KAAKM,MAAMC,Y,+BAIrC,IAAII,EAAeX,KAAKM,MAAMC,QAAU,QAAUP,KAAKC,MAAMW,MAC7D,OACE,gCACE,yBACEC,QAASb,KAAKQ,YACdM,MAAO,CAAEC,WAAYJ,EAAcK,MAAO,IAAKC,OAAQ,Y,GAjB5Cd,aAwBrBE,EAAOa,aAAe,CACpBN,MAAO,SAGMP,QCbAc,E,uKAhBH,IACAC,EAAUpB,KAAKC,MAAfmB,MACR,OAAOA,EACL,wBAAIP,QAAS,kBAAMQ,QAAQC,IAAI,gBAAgBpB,UAAU,cACtDkB,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,wBAAIvB,UAAU,kBAAkBwB,IAAKD,GAClCD,OAKP,sD,GAZerB,aCQNwB,EARI,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACf,oCACEA,EAAML,KAAI,SAACM,EAAMC,GAAP,OACR,wBAAIJ,IAAMI,GAAQ,4BAAMD,EAAKL,MAAW,4BAAMK,EAAKE,MAAMC,QAAQ,UCY1DC,EAdA,SAAC,GAAD,IAAEL,EAAF,EAAEA,MAAF,OACZ,2BAAOM,MAAM,SACd,+BACE,4BACE,wBAAIC,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,WAGJ,+BACK,kBAAC,EAAD,CAAYP,MAAOA,OCJtBA,EAAQ,CACV,CAAEJ,KAAM,SAAUO,MAAO,KACzB,CAAEP,KAAM,UAAWO,MAAO,KAC1B,CAAEP,KAAM,OAAQO,MAAO,QACvB,CAAEP,KAAM,0CAA2CO,MAAO,QAGtDK,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACZ,oCACE,kBAAC,EAAD,YAEA,kBAAC,EAAD,yBACCA,EAAS,kBAAC,EAAD,CAAQzB,MAAM,YAAe,KACvC,kBAAC,EAAD,CAAQQ,MAAO,CAAC,MAAO,OAAQ,YAC/B,kBAAC,EAAD,CAAQQ,MAAOA,MAKnBQ,EAAMlB,aAAe,CACnBmB,QAAQ,GAGKD,QCzBAE,EAJM,kBACjB,wBAAIpC,UAAU,aAAd,WCOWqC,EARK,kBAClB,2BAAOrC,UAAU,YACf,6IACA,yBAAKgC,MAAM,gBAAgBM,IAAI,sGCH/BC,EAAU,CAAC,EAAG,EAAG,EAAG,GAUTC,EARO,kBAClB,wBAAIxC,UAAU,cACbuC,EAAQlB,KAAI,SAACoB,EAAQb,GAAT,OACT,wBAAI5B,UAAU,kBAAkBwB,IAAKI,GAAQa,QCLjDF,EAAU,CAAC,EAAG,EAAG,EAAG,GAYTG,EAVU,kBACrB,wBAAI1C,UAAU,mBACbuC,EAAQlB,KAAI,SAACsB,EAAMf,GAAP,OACT,wBAAI5B,UAAU,YAAYwB,IAAKI,GAC3B,uBAAG5B,UAAU,YAAY4C,KAAM,SAAWD,GAAOA,SCQ9CE,EAVI,kBACf,0BAAM7C,UAAU,YAChB,uBAAGA,UAAU,QAAb,kHACA,uFAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGW8C,EAVA,kBACX,0BAAM9C,UAAU,QAChB,kBAAC,EAAD,MACA,yBAAKA,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,SCaW+C,E,kDAnBX,WAAYhD,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CAAE4C,SAAS,GACxB,EAAK1C,YAAc,EAAKA,YAAYC,KAAjB,gBAHJ,E,0DAOfT,KAAKU,SAAS,CAAEwC,SAAUlD,KAAKM,MAAM4C,Y,+BAIzC,OACG,4BAAQrC,QAASb,KAAKQ,YAAaN,UAAU,aACxCF,KAAKM,MAAM4C,QAAU,UAAY,mB,GAfvB/C,aC0BPgD,E,kDAvBb,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAE8C,SAAS,GACxB,EAAK5C,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,0DAOjBT,KAAKU,SAAS,CAAE0C,SAAUpD,KAAKM,MAAM8C,Y,+BAIrC,IAAIC,EAAgBrD,KAAKM,MAAM8C,QAC3BpD,KAAKC,MAAMmD,QACXpD,KAAKC,MAAMqD,UACf,OACE,oCACE,2BAAID,GACJ,4BAAQxC,QAASb,KAAKQ,aAAtB,mB,GAlBiBL,aCgCVoD,E,kDA9BX,WAAYtD,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CAAEkD,QAAS,EAAKvD,MAAMmD,SACnC,EAAKK,KAAO,EAAKA,KAAKhD,KAAV,gBACZ,EAAKiD,MAAQ,EAAKA,MAAMjD,KAAX,gBAJE,E,mDAQZT,KAAKM,MAAMkD,QAAUxD,KAAKC,MAAM0D,KAC/B3D,KAAKU,SAAS,CAAE8C,QAASxD,KAAKM,MAAMkD,QAAU,M,8BAK/CxD,KAAKM,MAAMkD,QAAU,GACpBxD,KAAKU,SAAS,CAAE8C,QAASxD,KAAKM,MAAMkD,QAAU,M,+BAKtD,OACI,oCACA,2BAAIxD,KAAKM,MAAMkD,SACf,4BAAQ3C,QAASb,KAAKyD,MAAtB,KACA,4BAAQ5C,QAASb,KAAK0D,OAAtB,U,GA1BcvD,aC+BPyD,E,kDA9Bb,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEkD,QAAS,GACxB,EAAKC,KAAO,EAAKA,KAAKhD,KAAV,gBACZ,EAAKiD,MAAQ,EAAKA,MAAMjD,KAAX,gBAJI,E,mDAQbT,KAAKM,MAAMkD,QAAUxD,KAAKC,MAAM0D,KAClC3D,KAAKU,SAAS,CAAE8C,QAASxD,KAAKM,MAAMkD,QAAUxD,KAAKC,MAAM4D,S,8BAKvD7D,KAAKM,MAAMkD,QAAU,GACvBxD,KAAKU,SAAS,CAAE8C,QAASxD,KAAKM,MAAMkD,QAAUxD,KAAKC,MAAM4D,S,+BAK3D,OACE,oCACE,2BAAI7D,KAAKM,MAAMkD,SACf,4BAAQ3C,QAASb,KAAKyD,MAAtB,KACA,4BAAQ5C,QAASb,KAAK0D,OAAtB,U,GAzBkBvD,aCoBX2D,E,kDAlBX,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CAAEyD,SAAU,GACzB,EAAKvD,YAAc,EAAKA,YAAYC,KAAjB,gBAHJ,E,0DAOfT,KAAKU,SAAS,CAAEqD,SAAU/D,KAAKM,MAAMyD,SAAW/D,KAAKC,MAAM+D,S,+BAI/D,IAAIC,EAAYjE,KAAKM,MAAMyD,SAC3B,OACI,4BAAQlD,QAASb,KAAKQ,YAAaM,MAAO,CAACoD,UAAWD,IAAtD,Y,GAfsB9D,aCuBfgE,E,kDAtBb,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAE8D,aAAc,GAC7B,EAAK5D,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,0DAOjBT,KAAKU,SAAS,CACZ0D,cAAepE,KAAKM,MAAM8D,aAAe,GAAKpE,KAAKC,MAAMmB,MAAMiD,W,+BAKjE,OACE,oCACE,2BAAIrE,KAAKC,MAAMmB,MAAMpB,KAAKM,MAAM8D,eAChC,4BAAQvD,QAASb,KAAKQ,aAAtB,a,GAjBeL,aCwBRmE,E,kDAvBb,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEiE,MAAO,GACtB,EAAK/D,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,gEAOjB+D,OAAOC,iBAAiB,QAASzE,KAAKQ,e,6CAItCgE,OAAOE,oBAAoB,QAAS1E,KAAKQ,e,oCAIzCR,KAAKU,SAAS,CAAE6D,MAAOvE,KAAKM,MAAMiE,MAAQ,M,+BAI1C,OAAO,uBAAG1D,QAASb,KAAKQ,aAAcR,KAAKM,MAAMiE,W,GApB5BpE,aCgDVwE,E,kDA7Cb,WAAY1E,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEsE,OAAQ,EAAGC,OAAQ,GAClC,EAAKC,QAAU,EAAKA,QAAQrE,KAAb,gBACf,EAAKsE,QAAU,EAAKA,QAAQtE,KAAb,gBAJE,E,gEAQjBuE,SAASC,MAAQjF,KAAKM,MAAMsE,OAAS5E,KAAKM,MAAMuE,S,2CAIhDG,SAASC,MAAQjF,KAAKM,MAAMsE,OAAS5E,KAAKM,MAAMuE,S,gCAIhD7E,KAAKU,SAAS,CAAEkE,OAAQ5E,KAAKM,MAAMsE,OAAS,M,gCAI5C5E,KAAKU,SAAS,CAAEmE,OAAQ7E,KAAKM,MAAMuE,OAAS,M,+BAI5C,IAAID,EAAS5E,KAAKM,MAAMsE,OACpBC,EAAS7E,KAAKM,MAAMuE,OACxB,OACE,yBAAK3E,UAAU,aACb,2BACE,4BAAQW,QAASb,KAAK8E,QAAS5E,UAAU,yBAAzC,KAGA,0BAAMA,UAAU,gCAAgC0E,IAElD,2BACE,4BAAQ/D,QAASb,KAAK+E,QAAS7E,UAAU,0BAAzC,KAGA,0BAAMA,UAAU,iCAAiC2E,S,GAvCjC1E,aCuBX+E,G,wDAxBb,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAE6E,MAAO,IACtB,EAAKC,aAAe,EAAKA,aAAa3E,KAAlB,gBAHH,E,yDAMN4E,GACXrF,KAAKU,SAAS,CAAEyE,MAAOE,EAAEC,cAAcC,U,+BAIvC,OACE,yBAAKrF,UAAU,cACb,2BACEA,UAAU,OACVqF,MAAOvF,KAAKM,MAAM6E,MAClBK,SAAUxF,KAAKoF,eAEjB,2BAAIpF,KAAKM,MAAM6E,MAAMd,a,GAnBRlE,c,wBCuDNsF,E,kDA9Cb,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAE6E,MAAO,IACtB,EAAKC,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAKiF,YAAc,EAAKA,YAAYjF,KAAjB,gBAJF,E,yDAON4E,GACXrF,KAAKU,SAAS,CAAEyE,MAAOE,EAAEC,cAAcC,U,kCAG7BlB,GACV,IAAIzD,EAQJ,OAPIyD,EAAS,GAAKA,GAAU,EAC1BzD,EAAQ,MACCyD,EAAS,GAAKA,GAAU,GACjCzD,EAAQ,SACCyD,EAAS,KAClBzD,EAAQ,SAEHA,I,+BAGC,IACFuE,EAAUnF,KAAKM,MAAf6E,MACFvE,EAAQZ,KAAK0F,YAAYP,EAAMd,QACnC,OACE,yBAAKnE,UAAU,aAAaY,MAAO,CAAEC,WAAYH,IAC/C,kBAAC+E,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CACE7F,UAAU,OACV8F,KAAK,WACLT,MAAOJ,EACPK,SAAUxF,KAAKoF,gBAInB,kBAACa,EAAA,EAAD,CAAQC,QAAQ,WAAhB,mBACkB,kBAACC,EAAA,EAAD,CAAOD,QAAQ,SAASf,EAAMd,c,GAxCzBlE,aCwChBsF,E,kDA9Cb,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAE8F,WAAY,EAAGC,QAAS,GACvC,EAAKC,QAAU,EAAKA,QAAQ7F,KAAb,gBACf,EAAK8F,QAAU,EAAKA,QAAQ9F,KAAb,gBAJE,E,oDAOX4E,GACNrF,KAAKU,SAAS,CACZ0F,WAAYf,EAAEC,cAAcC,MAC5Bc,QAA0C,IAA9BhB,EAAEC,cAAcC,MAAQ,IAAW,M,8BAI3CF,GACNrF,KAAKU,SAAS,CACZ2F,QAAShB,EAAEC,cAAcC,MACzBa,WAAsC,GAAxBf,EAAEC,cAAcC,MAAa,EAAI,O,+BAIzC,IAAD,EACyBvF,KAAKM,MAA7B8F,EADD,EACCA,WAAYC,EADb,EACaA,QACpB,OACE,kBAACV,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKG,MAAN,CAAYU,IAAI,cAAhB,cACA,kBAACb,EAAA,EAAKI,QAAN,CACE7F,UAAU,eACV8F,KAAK,SACLT,MAAOa,EACPZ,SAAUxF,KAAKsG,QACf9E,KAAK,eAEP,kBAACmE,EAAA,EAAKG,MAAN,CAAYU,IAAI,WAAhB,WACA,kBAACb,EAAA,EAAKI,QAAN,CACE7F,UAAU,eACV8F,KAAK,SACLT,MAAOc,EACPb,SAAUxF,KAAKuG,QACf/E,KAAK,iB,GAxCgBrB,a,gBC6ChBsG,E,kDA1Cb,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEoG,KAAM,GAAIC,KAAM,IAC/B,EAAKvB,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBAJF,E,yDAON4E,GACXrF,KAAKU,SAAS,CAAEgG,KAAMrB,EAAEC,cAAcC,U,kCAG5BF,GACVA,EAAEuB,iBACF5G,KAAKU,SAAS,CAAEgG,KAAM,GAAIC,KAAK,GAAD,mBAAM3G,KAAKM,MAAMqG,MAAjB,CAAuB3G,KAAKM,MAAMoG,W,+BAGxD,IAAD,EACgB1G,KAAKM,MAApBoG,EADD,EACCA,KAAMC,EADP,EACOA,KACd,OACE,yBAAKzG,UAAU,cACb,kBAAC2G,EAAA,EAAD,CAAWC,GAAG,MACXH,EAAKpF,KAAI,SAACmF,EAAM5E,GAAP,OACR,kBAAC+E,EAAA,EAAUE,KAAX,CAAgBD,GAAG,KAAKpF,IAAKI,GAC1B4E,OAIP,kBAACf,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKI,QAAN,CACEC,KAAK,OACL9F,UAAU,eACV8G,YAAY,WACZzB,MAAOmB,EACPlB,SAAUxF,KAAKoF,eAEjB,kBAACa,EAAA,EAAD,CAAQpF,QAASb,KAAKQ,aAAtB,a,GApCSL,aCoCJ8G,E,kDAnCX,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CAAEqC,OAAQ,EAAGgE,KAAM,IAChC,EAAKvB,aAAe,EAAKA,aAAa3E,KAAlB,gBACpB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBAJJ,E,yDAON4E,GACTrF,KAAKU,SAAS,CAAEiC,OAAQ0C,EAAEC,cAAcC,U,kCAGhCF,GACRA,EAAEuB,iBACF5G,KAAKU,SAAS,CAAEiC,OAAQ,EAAGgE,KAAK,GAAD,mBAAM3G,KAAKM,MAAMqG,MAAjB,CAAuB3G,KAAKM,MAAMqC,a,+BAG3D,IAAD,EACa3C,KAAKM,MAArBqC,EADG,EACHA,OAAQgE,EADL,EACKA,KACd,OACA,yBAAKzG,UAAU,cACX,4BAAKyG,EAAKpF,KAAI,SAACoB,EAAQb,GAAT,OACV,wBAAIJ,IAAKI,GAAQa,OAEzB,8BACA,2BAAOqD,KAAK,SAAS9F,UAAU,eAAe8G,YAAY,MAAMzB,MAAQ5C,EAAS6C,SAAWxF,KAAKoF,eACjG,4BAAQvE,QAASb,KAAKQ,aAAtB,QAEI,2BAAImG,EAAKO,QAAO,SAACC,EAAKC,GAAN,OACXD,IAAOC,IACV,S,GA/BUjH,aC2BLkH,E,kDA5Bb,WAAYpH,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEqC,OAAQ,GACvB,EAAKyC,aAAe,EAAKA,aAAa3E,KAAlB,gBAHH,E,yDAMN4E,GACXrF,KAAKU,SAAS,CAAEiC,OAAQ0C,EAAEC,cAAcC,U,+BAGhC,IACF5C,EAAW3C,KAAKM,MAAhBqC,OACA2E,EAActH,KAAKC,MAAnBqH,UACN,OACE,6BACE,2BAAIA,EAAU3E,IACd,2BACEzC,UAAU,eACV8F,KAAK,SACLT,MAAO5C,EACP6C,SAAUxF,KAAKoF,aACf5D,KAAK,oB,GAtBSrB,aCoBToH,E,uKAnBX,OACE,wBAAIrH,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMsH,GAAG,KAAT,SAEF,wBAAItH,UAAU,mBACZ,kBAAC,IAAD,CAAMsH,GAAG,UAAT,UAEF,wBAAItH,UAAU,mBACZ,kBAAC,IAAD,CAAMsH,GAAG,WAAT,WAEF,wBAAItH,UAAU,mBACZ,kBAAC,IAAD,CAAMsH,GAAG,UAAT,e,GAdWrH,aCCNsH,EAFI,kBAAM,8C,QCgCVC,G,kDA3Bb,WAAYzH,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEqH,SAAU,GACzB,EAAKnH,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,0DAOjBT,KAAKU,SAAS,CAAEiH,SAAU3H,KAAKM,MAAMqH,SAAW,O,+BAGxC,IACAA,EAAa3H,KAAKM,MAAlBqH,SACR,OACE,oCACE,kBAACC,EAAA,EAAD,CAAaC,IAAKF,EAAUG,MAAK,UAAKH,EAAL,OACjC,kBAAC1B,EAAA,EAAD,CACEC,QAAQ,UACRrF,QAASb,KAAKQ,YACduH,SAAuB,MAAbJ,GAHZ,a,GAhBexH,aCwBR2D,G,kDAxBb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEyD,SAAU,GACzB,EAAKvD,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,0DAOjBT,KAAKU,SAAS,CAAEqD,SAAU/D,KAAKM,MAAMyD,SAAW/D,KAAKC,MAAM+D,S,+BAI3D,IAAIC,EAAYjE,KAAKM,MAAMyD,SAC3B,OACE,kBAACkC,EAAA,EAAD,CACEC,QAAQ,UACRrF,QAASb,KAAKQ,YACdM,MAAO,CAAEoD,UAAWD,IAHtB,Y,GAdwB9D,a,iDCkDf6H,I,yDA/Cb,WAAY/H,GAAQ,IAAD,8BACjB,cAAMA,IASRgI,gBAAkB,SAACC,GACjB,EAAKxH,SAAS,CACZyH,UAAWD,KAZI,EAgBnBE,gBAAkB,SAACF,GACjB,EAAKxH,SAAS,CACZ2H,WAAYH,KAhBd,EAAK5H,MAAQ,CACX6H,UAAW,IAAIG,KACfD,WAAY,IAAIC,MAElB,EAAKL,gBAAkB,EAAKA,gBAAgBxH,KAArB,gBACvB,EAAK2H,gBAAkB,EAAKA,gBAAgB3H,KAArB,gBAPN,E,0DAsBL0H,EAAWE,GAGvB,OAFAF,EAAYI,KAAOJ,IACnBE,EAAaE,KAAOF,IACFG,KAAKL,EAAW,U,+BAG1B,IAAD,EACiCnI,KAAKM,MAArC6H,EADD,EACCA,UAAWE,EADZ,EACYA,WACbI,GAFC,EACwBC,KACX1I,KAAK2I,cAAcR,EAAWE,IAClD,OACE,oCACE,kBAAC,KAAD,CACEO,SAAU5I,KAAKM,MAAM6H,UACrB3C,SAAUxF,KAAKiI,kBAEjB,kBAAC,KAAD,CACEW,SAAU5I,KAAKM,MAAM+H,WACrB7C,SAAUxF,KAAKoI,kBAEjB,kBAACS,GAAA,EAAD,CAAO3C,QAAQ,WAAf,UAA6BuC,EAA7B,e,GA1CYK,IAAM3I,YCqBtBiB,GAAQ,CAAC,OAAQ,QAAS,SAAU,QAAS,SAI7CiB,GAAS,SAAC0G,GAAD,OAAOA,EAAIA,GACpBC,GAAM,SAACD,GAAD,OAAQA,IAAKA,GAiDRE,GA/CH,kBACV,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAACC,GAAD,CAAkBlF,KAAM,MACxB,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAW9B,UAAW0B,KACtB,kBAAC,EAAD,CAAW1B,UAAWjF,KACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAO+G,KAAK,UACV,kBAACC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,WACV,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAiBpF,KAAM,MACvB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOoF,KAAK,UACV,kBAAC,EAAD,CAAYhG,QAAQ,QAAQE,UAAU,UACtC,kBAAC,EAAD,CAASF,QAAS,GAAIO,IAAK,MAC3B,kBAAC,EAAD,CAAaE,KAAM,EAAGF,IAAK,MAC3B,kBAAC,EAAD,CAAUvC,MAAOA,KACjB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CACEgI,KAAK,iBACLE,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAQ3I,MAAO2I,EAAMC,OAAO5I,WAErD,kBAAC,IAAD,CACEwI,KAAK,oBACLE,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,kBAAC,EAAD,CAAa5F,KAAM4F,EAAMC,OAAO7F,IAAKE,MAAO0F,EAAMC,OAAO3F,UAG7D,kBAAC,EAAD,OAEF,kBAAC,EAAD,QClEgB4F,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASJ,MACvB,2DCZNK,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,GAAD,OAEF7E,SAAS8E,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNjJ,QAAQiJ,MAAMA,EAAMC,a","file":"static/js/main.ee6f4b83.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <header className=\"jumbotron\">\n        <h1>Hello {children}</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Paragraph = ({ children }) => (\n  <article className=\"col-md-6\">\n    <p>{children ? children : \"Hello World\"}</p>\n  </article>\n);\n\nexport default Paragraph;\n","// Update your <Square colour=\"hotpink\"> component so that the background starts green, but when it is clicked it changes to the passed in colour. It should alternate every time you click.\n\nimport React, { Component } from \"react\";\n\nclass Square extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isGreen: true };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ isGreen: !this.state.isGreen });\n  }\n\n  render() {\n    let changedColor = this.state.isGreen ? \"green\" : this.props.color;\n    return (\n      <figure>\n        <div\n          onClick={this.handleClick}\n          style={{ background: changedColor, width: 200, height: 200 }}\n        ></div>\n      </figure>\n    );\n  }\n}\n\nSquare.defaultProps = {\n  color: \"green\",\n};\n\nexport default Square;\n","import React, { Component } from \"react\";\n\nclass People extends Component {\n  render() {\n    const { names } = this.props;\n    return names ? (\n      <ul onClick={() => console.log(\"Hello World\")} className=\"list-group\">\n        {names.map((name, i) => (\n          <li className=\"list-group-item\" key={i}>\n            {name}\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p>Nothing to see here</p>\n    );\n  }\n}\n\nexport default People;\n","import React from 'react';\n\nconst BasketItem = ({items}) => (\n    <>\n    { items.map((item, index) => (\n        <tr key={ index }><td>{ item.name }</td><td>{ item.price.toFixed(2) }</td></tr>\n        ))}\n    </>\n);\n\nexport default BasketItem;","import React from 'react';\nimport BasketItem from './BasketItem';\n\nconst Basket = ({items}) => (\n   <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Item</th>\n      <th scope=\"col\">Price</th>\n    </tr>\n  </thead>\n  <tbody>\n       <BasketItem items={items} />\n  </tbody>\n</table>\n);\n\nexport default Basket;","import React, { Fragment } from \"react\";\nimport Header from \"./Header\";\nimport Paragraph from \"./Paragraph\";\nimport Square from \"./Square\";\nimport People from \"./People\";\nimport Basket from \"./Basket\";\n// import FadeIn from './FadeIn';\n\nlet items = [\n  { name: \"Coffee\", price: 2.1 },\n  { name: \"Bananas\", price: 3.5 },\n  { name: \"Milk\", price: 250.65 },\n  { name: \"The Great Milk Shortage by Simon Schama\", price: 12.99 },\n];\n\nconst Stuff = ({ square }) => (\n  <>\n    <Header>Tom</Header>\n\n    <Paragraph>That's All Folks</Paragraph>\n    {square ? <Square color=\"hotpink\" /> : null}\n    <People names={[\"Jim\", \"Mike\", \"Angela\"]} />\n    <Basket items={items} />\n    {/* <FadeIn time={\"500ms\"}>Hello</FadeIn> */}\n  </>\n);\n\nStuff.defaultProps = {\n  square: true,\n};\n\nexport default Stuff;\n","import React from 'react';\n\nconst AppifyHeader = () => (\n    <h1 className=\"col-md-12\">My App</h1>\n  );\n\nexport default AppifyHeader;\n","import React from 'react';\n\nconst AppifyAside = () => (\n  <aside className=\"col-md-4\">\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Huius, Lyco, oratione locuples, rebus ipsis ielunior.</p>\n    <img class=\"img-thumbnail\" src=\"https://64.media.tumblr.com/ea3884f17979500c2406fd4d21891195/tumblr_mr4humiiCH1r4xjo2o1_250.gif\">\n    </img>\n    </aside>\n  );\n\nexport default AppifyAside;","import React from 'react';\n\nlet numbers = [1, 2, 3, 4];\n\nconst AppifyNumbers = () => (\n    <ul className=\"list-group\">\n    {numbers.map((number, index) => (\n        <li className=\"list-group-item\" key={index}>{number}</li>\n    ))}\n    </ul>\n  );\n\nexport default AppifyNumbers;","import React from 'react';\n\nlet numbers = [1, 2, 3, 4];\n\nconst AppifyPagination = () => (\n    <ul className=\"pagination mt-4\">\n    {numbers.map((page, index) => (\n        <li className=\"page-item\" key={index}>\n            <a className=\"page-link\" href={\"/page/\" + page}>{page}</a>\n        </li>\n    ))}\n    </ul>\n  );\n\nexport default AppifyPagination;","import React from 'react';\nimport AppifyNumbers from './AppifyNumbers';\nimport AppifyPagination from './AppifyPagination';\n\nlet numbers = [1, 2, 3, 4];\n\nconst AppifyMain = () => (\n    <main className=\"col-md-8\">\n    <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Huius, Lyco, oratione locuples, rebus ipsis ielunior.</p>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    {/* Number list */}\n    <AppifyNumbers />\n    <AppifyPagination />\n    </main>\n  );\n\nexport default AppifyMain;","import React, {fragment} from 'react';\nimport AppifyHeader from './AppifyHeader';\nimport AppifyAside from './AppifyAside';\nimport AppifyMain from './AppifyMain';\n\nconst Appify = () => (\n    <body className=\"mt-4\">\n    <AppifyHeader />\n    <div className=\"row\">\n    <AppifyAside />\n    <AppifyMain />\n    </div>\n    </body>\n  );\n\nexport default Appify;\n","import React, { Component } from 'react';\n\nclass Clicked extends Component\n{\n    constructor(props) {\n        super(props); \n        this.state = { clicked: false }; \n        this.handleClick = this.handleClick.bind(this); \n    }\n\n    handleClick() {\n        this.setState({ clicked: !this.state.clicked })\n    }\n\n    render() {\n    return (\n       <header onClick={this.handleClick} className=\"jumbotron\">\n           {this.state.clicked ? \"Clicked\" : \"Not Clicked\"}\n       </header> \n    );\n    }\n}\n\nexport default Clicked;","// Create <ToggleText initial=\"Hello\" alternate=\"World\"> component. It should consist of a <p> and a <button>Toggle</button>. When the <button> is clicked the text of the <p> tag should alternate between initial and alternate.\n\nimport React, { Component } from \"react\";\n\nclass ToggleText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { initial: true };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ initial: !this.state.initial });\n  }\n\n  render() {\n    let switchMessage = this.state.initial\n      ? this.props.initial\n      : this.props.alternate;\n    return (\n      <>\n        <p>{switchMessage}</p>\n        <button onClick={this.handleClick}>Click here</button>\n      </>\n    );\n  }\n}\n\nexport default ToggleText;\n","// Create a <Counter initial={ 50 } max={ 100 } /> component. It should consist of a <p> containing a number (which starts at the initial value) and two buttons, + and -. When the user clicks the + button, the number should go up. When the user clicks the - button the number should go down. The number should not be able to go below 0. Use props to pass in a maximum value for the counter.\n\nimport React, { Component } from 'react';\n\nclass Counter extends Component\n{\n    constructor(props) {\n        super(props); \n        this.state = { counter: this.props.initial }; \n        this.plus = this.plus.bind(this); \n        this.minus = this.minus.bind(this); \n    }\n\n    plus() {\n        if(this.state.counter < this.props.max) {\n            this.setState({ counter: this.state.counter + 1 });\n        }\n    }\n\n    minus() {\n        if(this.state.counter > 0) {\n            this.setState({ counter: this.state.counter - 1 });\n        }\n    }\n    \n    render() {\n    return (\n        <>\n        <p>{this.state.counter}</p>\n        <button onClick={this.plus}>+</button>\n        <button onClick={this.minus}>-</button>\n        </>\n    );\n    }\n}\n\nexport default Counter;","// Create a <StepCounter max={ 100 } step={ 5 } /> component. It should consist of a <p> containing a number (start at 0) and two buttons, + and -. When the user clicks the + button, the number should go up by step. When the user clicks the - button the number should go down by step. The number should not be able to go below 0. Use props to pass in a maximum value for the counter.\n\nimport React, { Component } from \"react\";\n\nclass StepCounter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { counter: 0 };\n    this.plus = this.plus.bind(this);\n    this.minus = this.minus.bind(this);\n  }\n\n  plus() {\n    if (this.state.counter < this.props.max) {\n      this.setState({ counter: this.state.counter + this.props.step });\n    }\n  }\n\n  minus() {\n    if (this.state.counter > 0) {\n      this.setState({ counter: this.state.counter - this.props.step });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <p>{this.state.counter}</p>\n        <button onClick={this.plus}>+</button>\n        <button onClick={this.minus}>-</button>\n      </>\n    );\n  }\n}\n\nexport default StepCounter;\n","// Create a <CatchMeIfYouCan jump={ 100 }> component. It should have a <button> that when clicked moves jump pixels down the screen.\n\nimport React, { Component } from 'react';\n\nclass CatchMeIfYouCan extends Component\n{\n    constructor(props) {\n        super(props); \n        this.state = { position: 0 }; \n        this.handleClick = this.handleClick.bind(this); \n    }\n\n    handleClick() {\n        this.setState({ position: this.state.position + this.props.jump})\n    }\n    \n    render() {\n    let placement = this.state.position; \n    return (\n        <button onClick={this.handleClick} style={{marginTop: placement}}>Jump</button>\n    );\n    }\n}\n\nexport default CatchMeIfYouCan;","// Create a <RollCall names={ names }> component. It should have a button \"Next\". When the component first loads it should show the first name in the array. Every time you click \"Next\" it should show the next name in the array. It should loop back to the beginning.\n\nimport React, { Component } from \"react\";\n\nclass RollCall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentIndex: 0 };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      currentIndex: (this.state.currentIndex + 1) % this.props.names.length,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <p>{this.props.names[this.state.currentIndex]}</p>\n        <button onClick={this.handleClick}>Next</button>\n      </>\n    );\n  }\n}\n\nexport default RollCall;\n","// Create a component <GodCounter /> that when you click anywhere in the browser window increments a counter by 1. Make sure that you remove the event handler in componentWillUnmount!\n\nimport React, { Component } from \"react\";\n\nclass GodCounter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"click\", this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.handleClick);\n  }\n\n  handleClick() {\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    return <p onClick={this.handleClick}>{this.state.count}</p>;\n  }\n}\n\nexport default GodCounter;\n","// Add the necessary code so that you can increment both of the counters.\n\n// Use componentDidMount and componentDidUpdate to update the document.title property so that the page title is always the value of both values added together (e.g. when the component loads it should be 2, after the first click it should change to 3)\n\nimport React, { Component } from \"react\";\n\nclass TwoCounters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value1: 1, value2: 1 };\n    this.handle1 = this.handle1.bind(this);\n    this.handle2 = this.handle2.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = this.state.value1 + this.state.value2;\n  }\n\n  componentDidUpdate() {\n    document.title = this.state.value1 + this.state.value2;\n  }\n\n  handle1() {\n    this.setState({ value1: this.state.value1 + 1 });\n  }\n\n  handle2() {\n    this.setState({ value2: this.state.value2 + 1 });\n  }\n\n  render() {\n    let value1 = this.state.value1;\n    let value2 = this.state.value2;\n    return (\n      <div className=\"jumbotron\">\n        <p>\n          <button onClick={this.handle1} className=\"btn btn-lg btn-danger\">\n            +\n          </button>\n          <span className=\"alert alert-danger mr-2 ml-2\">{value1}</span>\n        </p>\n        <p>\n          <button onClick={this.handle2} className=\"btn btn-lg btn-success\">\n            +\n          </button>\n          <span className=\"alert alert-success mr-2 ml-2\">{value2}</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default TwoCounters;\n","// Create a <Length> component. It should contain an <input> and tell you how many characters have been typed into the <input>.\n\nimport React, { Component } from \"react\";\n\nclass Length extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ input: e.currentTarget.value });\n  }\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <input\n          className=\"text\"\n          value={this.state.input}\n          onChange={this.handleChange}\n        ></input>\n        <p>{this.state.input.length}</p>\n      </div>\n    );\n  }\n}\n\nexport default Length;\n","// Using only React Bootstrap components (there shouldn't be any HTML elements), create a <PasswordStrength> component. It should contain an input with the type password. The background styling should change depending on the length of the password:\n\n// If it's empty the background shouldn't have styling.\n// If it's less than 9 it should be red.\n// If it's less than 16 it should be orange.\n// If it's 16 or more then it should be green.\n\nimport React, { Component } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass PasswordStrength extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleColor = this.handleColor.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ input: e.currentTarget.value });\n  }\n\n  handleColor(length) {\n    let color;\n    if (length > 0 && length <= 9) {\n      color = \"red\";\n    } else if (length > 9 && length <= 16) {\n      color = \"orange\";\n    } else if (length > 16) {\n      color = \"green\";\n    }\n    return color;\n  }\n\n  render() {\n    let { input } = this.state;\n    let color = this.handleColor(input.length);\n    return (\n      <div className=\"form-group\" style={{ background: color }}>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            className=\"text\"\n            type=\"password\"\n            value={input}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\">\n          Password length <Badge variant=\"light\">{input.length}</Badge>\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default PasswordStrength;\n","// Using only React Bootstrap components (there shouldn't be any HTML elements), create a <TempConverter> component. It should have a °F and °C input. When you type a number into one input it should update the value in the other.\n\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nclass PasswordStrength extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { fahrenheit: 0, celsius: 0 };\n    this.handleF = this.handleF.bind(this);\n    this.handleC = this.handleC.bind(this);\n  }\n\n  handleF(e) {\n    this.setState({\n      fahrenheit: e.currentTarget.value,\n      celsius: ((+e.currentTarget.value - 32) * 5) / 9,\n    });\n  }\n\n  handleC(e) {\n    this.setState({\n      celsius: e.currentTarget.value,\n      fahrenheit: (+e.currentTarget.value * 9) / 5 + 32,\n    });\n  }\n\n  render() {\n    const { fahrenheit, celsius } = this.state;\n    return (\n      <Form.Group>\n        <Form.Label for=\"fahrenheit\">Fahrenheit</Form.Label>\n        <Form.Control\n          className=\"form-control\"\n          type=\"number\"\n          value={fahrenheit}\n          onChange={this.handleF}\n          name=\"fahrenheit\"\n        />\n        <Form.Label for=\"celsius\">Celsius</Form.Label>\n        <Form.Control\n          className=\"form-control\"\n          type=\"number\"\n          value={celsius}\n          onChange={this.handleC}\n          name=\"celsius\"\n        />\n      </Form.Group>\n    );\n  }\n}\n\nexport default PasswordStrength;\n","// Using only React Bootstrap components (there shouldn't be any HTML elements), create a <List> component that consists of a list group, an input, and an \"Add\" button. When you click the button, whatever is in the input should get added to the list group.\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport React, { Component } from \"react\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todo: \"\", list: [] };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ todo: e.currentTarget.value });\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState({ todo: \"\", list: [...this.state.list, this.state.todo] });\n  }\n\n  render() {\n    const { todo, list } = this.state;\n    return (\n      <div className=\"form-group\">\n        <ListGroup as=\"ul\">\n          {list.map((todo, index) => (\n            <ListGroup.Item as=\"li\" key={index}>\n              {todo}\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Add todo\"\n            value={todo}\n            onChange={this.handleChange}\n          />\n          <Button onClick={this.handleClick}>Add</Button>\n        </Form.Group>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","// Create an <Adder> component. It should have a number <input> field and an \"Add\" <button>. When the \"Add\" button is pressed the number should be added to a list of numbers on screen and the total of all the numbers in the list should be displayed below. Make sure you test the total is correct: try 1, 2, and 3 and check you get 6\n\n//Add numbers in array together\n\nimport React, { Component } from 'react';\n\nclass Adder extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = { number: 0, list: [] }; \n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ number: e.currentTarget.value });\n    }     \n\n    handleClick(e) {\n        e.preventDefault();\n        this.setState({ number: 0, list: [...this.state.list, this.state.number] }); \n    }\n\n    render() {\n    const{number, list} = this.state;\n    return (\n    <div className=\"form-group\">\n        <ul>{list.map((number, index) => (\n            <li key={index}>{number}</li>\n        ))}</ul>\n    <form> \n    <input type=\"number\" className=\"form-control\" placeholder=\"Add\" value={ number } onChange={ this.handleChange }></input>\n    <button onClick={this.handleClick}>Add</button>\n    </form>\n        <p>{list.reduce((acc, num) => (\n            +acc + +num\n        ),0)}</p>\n    </div>\n        );\n    }\n}\n\nexport default Adder;","// Create a <Transform transform={ /* ...your function here... */ }> component. It should accept a function that takes a number and returns a number (e.g. a squaring function x => x * x or an increment function x => x + 1). The component should have an <input type=\"number\"> and a <p>. When the user types into the <input> the <p> should output the result of running the number through the transform function. Try adding a few <Transform> components to your app with a different function for each one.\n\nimport React, { Component } from \"react\";\n\nclass Transform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { number: 0 };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ number: e.currentTarget.value });\n  }\n\n  render() {\n    let { number } = this.state;\n    let { transform } = this.props;\n    return (\n      <div>\n        <p>{transform(number)}</p>\n        <input\n          className=\"form-control\"\n          type=\"number\"\n          value={number}\n          onChange={this.handleChange}\n          name=\"fahrenheit\"\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default Transform;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"list-group-item\">\n          <Link to=\"/first\">First</Link>\n        </li>\n        <li className=\"list-group-item\">\n          <Link to=\"/second\">Second</Link>\n        </li>\n        <li className=\"list-group-item\">\n          <Link to=\"/third\">Third</Link>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nconst FourOhFour = () => <p>Page not found</p>;\n\nexport default FourOhFour;\n","import React, { Component } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Button from \"react-bootstrap/Button\";\n\n// Using only React Bootstrap components (there shouldn't be any HTML elements), create a <Progress> component. It should have a progress bar and a \"More!\" button. The progress bar should start at 0. Each time the button is pressed it should move 10% further along until it reaches 100%. Once it reaches 100% the button should become disabled.\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { progress: 0 };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ progress: this.state.progress + 10 });\n  }\n\n  render() {\n    const { progress } = this.state;\n    return (\n      <>\n        <ProgressBar now={progress} label={`${progress}%`} />\n        <Button\n          variant=\"primary\"\n          onClick={this.handleClick}\n          disabled={progress === 100}\n        >\n          More\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default Progress;\n","// Using only React Bootstrap components (there shouldn't be any HTML elements), create a <CatchMeIfYouCan jump={ 100 }> component. It should have a button that when clicked moves jump pixels down the screen.\n\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass CatchMeIfYouCan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { position: 0 };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ position: this.state.position + this.props.jump });\n  }\n\n  render() {\n    let placement = this.state.position;\n    return (\n      <Button\n        variant=\"warning\"\n        onClick={this.handleClick}\n        style={{ marginTop: placement }}\n      >\n        Jump\n      </Button>\n    );\n  }\n}\n\nexport default CatchMeIfYouCan;\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Alert from \"react-bootstrap/Alert\";\nimport moment from \"moment\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Dates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstDate: new Date(),\n      secondDate: new Date(),\n    };\n    this.handleChangeOne = this.handleChangeOne.bind(this);\n    this.handleChangeTwo = this.handleChangeTwo.bind(this);\n  }\n\n  handleChangeOne = (date) => {\n    this.setState({\n      firstDate: date,\n    });\n  };\n\n  handleChangeTwo = (date) => {\n    this.setState({\n      secondDate: date,\n    });\n  };\n\n  calculateDays(firstDate, secondDate) {\n    firstDate = moment(firstDate);\n    secondDate = moment(secondDate);\n    return secondDate.diff(firstDate, \"days\");\n  }\n\n  render() {\n    const { firstDate, secondDate, days } = this.state;\n    const daysBetween = this.calculateDays(firstDate, secondDate);\n    return (\n      <>\n        <DatePicker\n          selected={this.state.firstDate}\n          onChange={this.handleChangeOne}\n        />\n        <DatePicker\n          selected={this.state.secondDate}\n          onChange={this.handleChangeTwo}\n        />\n        <Alert variant=\"primary\">{`${daysBetween} days`}</Alert>\n      </>\n    );\n  }\n}\n\nexport default Dates;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Stuff from \"./Stuff\";\nimport Appify from \"./Appify\";\nimport Clicked from \"./Clicked\";\nimport ToggleText from \"./ToggleText\";\nimport Counter from \"./Counter\";\nimport StepCounter from \"./StepCounter\";\nimport CatchMeIfYouCan from \"./CatchMeIfYouCan\";\nimport RollCall from \"./RollCall\";\nimport GodCounter from \"./GodCounter\";\nimport TwoCounters from \"./TwoCounters\";\nimport LightBox from \"./LightBox\";\nimport Length from \"./Length\";\nimport PasswordStrength from \"./PasswordStrength\";\nimport TempConverter from \"./TempConverter\";\nimport List from \"./List\";\nimport Adder from \"./Adder\";\nimport Transform from \"./Transform\";\nimport Footer from \"./Footer\";\nimport FourOhFour from \"./FourOhFour\";\nimport Square from \"./Square\";\nimport Progress from \"./pre-made/Progress\";\nimport CatchMeIfYouCan2 from \"./pre-made/CatchMeIfYouCan2\";\nimport Dates from \"./pre-made/Dates\";\n\nlet names = [\"Dave\", \"Ariel\", \"Sheila\", \"Nigel\", \"Peter\"];\nlet blah =\n  \"https://www.sundaypost.com/wp-content/uploads/sites/13/2018/03/iStock-697083606.jpg.jpg\";\n\nlet square = (x) => x * x;\nlet sum = (x) => +x + +x;\n\nconst App = () => (\n  <Router>\n    <Dates />\n    <CatchMeIfYouCan2 jump={100} />\n    <Progress />\n    <Stuff />\n    <Switch>\n      <Route exact path=\"/\">\n        <Transform transform={sum} />\n        <Transform transform={square} />\n        <Adder />\n        <List />\n      </Route>\n      <Route path=\"/first\">\n        <TempConverter />\n        <PasswordStrength />\n        <Length />\n      </Route>\n      <Route path=\"/second\">\n        <TwoCounters />\n        <GodCounter />\n        <CatchMeIfYouCan jump={100} />\n        <Clicked />\n      </Route>\n      <Route path=\"/third\">\n        <ToggleText initial=\"Hello\" alternate=\"World\" />\n        <Counter initial={50} max={100} />\n        <StepCounter step={5} max={100} />\n        <RollCall names={names} />\n        <Appify />\n      </Route>\n      <Route\n        path=\"/square/:color\"\n        render={({ match }) => <Square color={match.params.color} />}\n      />\n      <Route\n        path=\"/steps/:max/:step\"\n        render={({ match }) => (\n          <StepCounter max={+match.params.max} step={+match.params.step} />\n        )}\n      />\n      <FourOhFour />\n    </Switch>\n    <Footer />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}